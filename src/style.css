/* 
    Developer: Ali Sariyer
    CSS Name convention: BEM (Block element modifier)

*/
:root {
    --c-moderate-blue: hsl(238, 40%, 52%);
    --c-soft-red: hsl(358, 79%, 66%);
    --c-light-grayish-blue: hsl(239, 57%, 85%);
    --c-pale-red: hsl(357, 100%, 86%);
    --c-dark-blue: hsl(212, 24%, 26%);
    --c-grayish-blue: hsl(211, 10%, 45%);
    --c-light-gray: hsl(223, 19%, 93%);
    --c-very-light-gray: hsl(228, 33%, 97%);
    --c-white: hsl(0, 0%, 100%);
    --fw-regular: 400;
    --fw-medium: 500;
    --fw-bold: 700;
    font-size: 62.5%;
    --rem: 1rem;
}

*, *::before, *::after {
    box-sizing: border-box;
}

body, h1, h2, h3, p {
    margin: 0;
    padding: 0;
}

body {
    min-height: 100vh;
    margin: calc(var(--rem) * 3.6) calc(var(--rem) * 1.6);
    background-color:  var(--c-light-grayish-blue);
    font-family: 'Rubik', sans-serif;
    font-size: calc(var(--rem) * 1.6)
}

.container {
    margin: 0 auto;
    max-width: calc(var(--rem) * 100); 
}

.card {
    display: grid;
    min-height: calc(var(--rem) * 7);
    grid-template-columns: auto auto auto;
    grid-template-rows: minmax(calc(var(--rem) * 1.5), auto);
    gap: calc(var(--rem) * 1.2);
    background-color: var(--c-very-light-gray);
    border-radius: calc(var(--rem) * .5);
    padding: calc(var(--rem) * 2);
    margin-bottom: calc(var(--rem) * 2);
}

.card-header {
    grid-area: 1 / 1 / 2 / span 3;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: calc(var(--rem) * 1.5);
    font-weight: var(--fw-bold);
    color: var(--c-dark-blue);
}

.card-img {
    width: 36px;
}

.card-user {
    font-size: calc(var(--rem) * 1.6);
}

.card-me {
    text-transform: lowercase;
    background-color: var(--c-moderate-blue);
    font-size: calc(var(--rem) * 1.3);
    color: var(--c-white);
    padding: calc(var(--rem) * .2) calc(var(--rem) * .5);
    border-radius: calc(var(--rem) * .2);
    font-weight: var(--fw-medium);
    /* display: none; */
}

.visible {
    display: block;
}

.card-date, .card-body {
    font-weight: var(--fw-regular);
    color: var(--c-grayish-blue);
}

.card-body {
    grid-area: 2 / 1 / 3 / span 3;
    line-height: 1.3;
}

.card-tag {
    font-weight: var(--fw-medium);
    color: var(--c-moderate-blue);
    padding-right: calc(var(--rem) * .5);
    /* display: none; */
}


.card-vote {
    grid-area: 3 / 1 / 4 / 2;
    background-color: var(--c-light-gray);
    border-radius: calc(var(--rem) * .7);
}

.card-vote * {
    padding: calc(var(--rem)) calc(var(--rem) * 1.1);
}

.card-up, .card-down{
    color: var(--c-light-grayish-blue);
    cursor: pointer;
}

.card-up:hover, .card-down:hover {
    color: var(--c-grayish-blue);
}

.card-number {
    color: var(--c-moderate-blue);
    font-weight: var(--fw-medium);
}

.card-modify, .card-vote, .card-reply, .card-delete {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.card-up, .card-down, .card-number, .card-delete, .card-reply, svg>path {
    transition: color .5s, fill .5s;
}

.card-delete, .card-reply {
    gap: calc(var(--rem) * .4);
}

.card-modify {
    grid-area: 3 / 3 / 4 / 4;
    gap: calc(var(--rem) * 1.2);
}

.card-delete {
    font-weight: var(--fw-medium);
    color: var(--c-soft-red);
    /* display: none; */
}

.card-delete:hover {
    color: var(--c-pale-red);
    cursor: pointer;
}

.card-delete:hover svg>path {
    fill: var(--c-pale-red);
}

.card-reply {
    font-weight: var(--fw-medium);
    color: var(--c-moderate-blue);
}

.card-reply:hover {
    color: var(--c-light-grayish-blue);
    cursor: pointer;
}

.card-reply:hover svg>path {
    fill: var(--c-light-grayish-blue);
}

@media screen and (min-width: 800px) {
    .card {
        gap: calc(var(--rem) * 1.2) calc(var(--rem) * 1.4);
    }

    .card-header {
        grid-area: 1 / 2 / 2 / 3;
    }

    .card-body {
        grid-area: 2 / 2 / 4 / 4;
        line-height: 1.3;
    }

    .card-vote {
        grid-area: 1 / 1 / 4 / 2;
        flex-direction: column;
    }

    .card-modify {
        grid-area: 1 / 3 / 2 / 4;
        justify-content: flex-end;
    }

    .card-vote * {
        padding: calc(var(--rem)) calc(var(--rem) * 1.3) ;
    }

}